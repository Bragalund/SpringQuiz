server:
  port: 8082
  context-path: "/api"

spring:
  application:
    name: "user-service"
  redis:
    host: redis
    port: 6379
  session:
    store-type: redis
  datasource:
    url: "jdbc:postgresql://user-db:5432/user"
    username: "user"
    password: ""
    driver-class-name: "org.postgresql.Driver"
  jpa:
    database: "postgresql"
    hibernate:
      ddl-auto: "update"
  rabbitmq:
    host: rabbitmq

security:
  sessions: NEVER

eureka:
  instance:
    preferIpAddress: true
  client:
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone: http://eureka:8761/eureka/

logging:
  level:
    org.springframework.security: debug

---
spring:
  profiles: development
  datasource:
    url: "jdbc:h2:mem:"
    driver-class-name: "org.h2.Driver"
  jpa:
    database: "h2"
    hibernate:
      ddl-auto: "create-drop"
  session:
    store-type: none
  data:
    redis:
      repositories:
        enabled: false
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration

eureka:
  client:
    enabled: false
security:
  sessions: always
